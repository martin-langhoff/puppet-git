#!/bin/bash

GIT_DIR=$(git rev-parse --git-dir)

if [ -z "$GIT_DIR" ]; then
	echo >&2 "Not in a git checkout"
	exit 1
fi

cat << 'EOF' > $GIT_DIR/hooks/pre-commit.tmp$$
#!/bin/sh

# based on http://projects.puppetlabs.com/projects/1/wiki/Puppet_Version_Control

syntax_errors=0
error_msg=$(mktemp /tmp/error_msg.XXXXXX)

if git rev-parse --quiet --verify HEAD > /dev/null
then
    against=HEAD
else
    # Initial commit: diff against an empty tree object
    against=4b825dc642cb6eb9a060e54bf8d69288fbee4904
fi

# Get list of new/modified manifest and template files to check (in git index)
for indexfile in `git diff-index --diff-filter=AM --name-only --cached $against | egrep '\.(pp|erb)'`
do
    # Don't check empty files
    if [ `git cat-file -s :0:$indexfile` -gt 0 ]
    then
        case $indexfile in
            *.pp )
                # Check puppet manifest syntax
                # Puppet 2.7.20 or newer
                git cat-file blob :0:$indexfile | puppet parser validate > $error_msg ;;
            *.erb )
                # Check ERB template syntax
                # -P : ignore lines which start with "%" 
                git cat-file blob :0:$indexfile | erb -P -x -T - | ruby -c 2> $error_msg > /dev/null ;;
        esac
        if [ "$?" -ne 0 ]
        then
            echo -n "$indexfile: "
            cat $error_msg
            syntax_errors=`expr $syntax_errors + 1`
        fi
    fi
done

rm -f $error_msg

if [ "$syntax_errors" -ne 0 ]
then
    echo "Error: $syntax_errors syntax errors found, aborting commit."
    exit 1
fi
EOF

if ! cmp $GIT_DIR/hooks/pre-commit $GIT_DIR/hooks/pre-commit.tmp$$ ; then
	cp $GIT_DIR/hooks/pre-commit{,.backup-$(date +%Y%m%d%H%M)}
	mv $GIT_DIR/hooks/pre-commit.tmp$$ $GIT_DIR/hooks/pre-commit
fi
chmod ugo+x $GIT_DIR/hooks/pre-commit
