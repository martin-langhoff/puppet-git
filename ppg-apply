#!/bin/bash

if [[ -n "${PPG_DEBUG}" ]]; then
	set -x
fi

pushd /etc/puppet >/dev/null || exit 1

PPG_EXEC_PATH=$( dirname $(readlink -f "${BASH_SOURCE[0]}" ) )
GIT_EXEC_PATH=$(git --exec-path)
GIT_DIR=$(git rev-parse --git-dir)
export GIT_SSH="${PPG_EXEC_PATH}/ppg-ssh"

. ${PPG_EXEC_PATH}/ppg-functions

if [ -z "$GIT_DIR" ]; then
	echo >&2 "Not in a git checkout"
	exit 1
fi

## FIXME?: check whether these are overriden 
PUPPETCONF=/etc/puppet/puppet.conf
REPORT_PATH=/var/lib/puppet/state/last_run_report.yaml

# puppet.conf syntax is compat with git config syntax
# (both are INI style). How lucky can we be? :-)
report_bool=$(git config -f $PUPPETCONF --bool --get agent.report) 

# note: default is true
if [ "$report_bool" = 'false' ]; then
	echo >&2 "ERROR: reports are disabled!"
	exit 1
fi
if [ -x /etc/puppet/local-puppet-apply ]; then
    /etc/puppet/local-puppet-apply
    pexit=$?
else 
    puppet apply --detailed-exitcodes $@
    pexit=$?
fi

# From http://docs.puppetlabs.com/man/apply.html
# 0 means ?? (guess: no changes)
# 2 means there were changes
# 4 means failures
# 6 means changes & failures
if [[ $pexit -eq 00 ]] || [[ $pexit -eq 2 ]]; then
	# mark as good
	lastgood_sha1=$(git rev-parse --revs-only refs/heads/ppg/lastgood)
	if [ -n "$lastgood_sha1" ]; then
		git push . HEAD:refs/heads/ppg/lastgood
	else
		# setup with reflog - may be handy
		# for diagnosis
		git branch -l refs/heads/ppg/lastgood HEAD
	fi
else
	## TODO: do we want to warn in any way?
	:
fi

hostname=$(xhostname)
worktree='/etc/puppet/.ppg/scratch-worktree'
mkdir -p ${worktree}/reports

export GIT_DIR=/etc/puppet/.ppg
pushd ${worktree} &>/dev/null 

if ! git rev-parse --revs-only \
	refs/heads/${hostname} &>/dev/null ; then
	# it is going to be the first commit
	# FIXME: any special handling?
	:
fi
cp ${REPORT_PATH} ${worktree}/reports/${hostname}.yaml
git update-index --add reports/${hostname}.yaml
git commit -m 'ppg apply report'

headname=$(git rev-parse --symbolic-full-name --revs-only HEAD)
if [[ "${headname}" != "refs/heads/${hostname}" ]]; then
	# we are in thefirst run, auto-created 'master' branch
	git branch ${hostname} HEAD
	git checkout ${hostname}
	git branch -D master
fi

popd &>/dev/null
unset GIT_DIR

# NOTE: callers rely on getting an error through if push-reports
#       fails
exec $PPG_EXEC_PATH/ppg-push-reports
