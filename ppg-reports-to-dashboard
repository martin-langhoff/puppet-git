#!/bin/bash

if [[ -n "${PPG_DEBUG}" ]]; then
	set -x
fi
PPG_EXEC_PATH=$( dirname $(readlink -f "${BASH_SOURCE[0]}" ) )

export GIT_DIR=${1:-/var/lib/ppg/reports-import.git}
pushd ${GIT_DIR} >/dev/null

if [[ "$(git config --get --bool core.bare)" != 'true' ]]; then
	echo >&2 "ERROR: must run on a bare repository"
	exit 1
fi

trackdir=/var/lib/ppg/reports-import.track
reportstmpdir=$(mktemp -d --tmpdir=/var/tmp ppg-reports-to-dashboard.XXXXXXX )
seenany=no

for head in $(git branch | /bin/grep -v '(no branch)' ); do
	lastimportstate=
	if [ -e ${trackdir}/${head} ]; then
		lastimportstate=$(<${trackdir}/${head})
	fi
	
	if [ -n "${lastimportstate}" ]; then 
		# we have a local head, walk deltas
		logparams="${lastimportstate}..refs/heads/${head}"
	else
		# Initial import will take only two days
		# of old reports
		logparams=" --since=2.days.ago refs/heads/${head}"
	fi
	# !? - the last line of git log has no \n so tac returns a
	# first line that runs together the last two lines. workaround injecting
	# a newline...
	for commit in $( (git log --pretty=format:%H ${logparams} && echo '') | tac); do
		seenany=yes
		# the branchname is the hostname
		fname=reports/${head}.yaml
		epoch=$(git show -s --pretty=format:%ct ${commit})
		# magic: 
		#  - get the file without checking out the commit
		#  - store it in a tmpdir for later import with rake
		git show ${commit}:${fname} > ${reportstmpdir}/${epoch}-$head.yaml
		echo ${commit} > ${trackdir}/${head}
	done
done
if [ "${seenany}" = 'yes' ]; then
	# Trims reports to a single resource if the status = "unchanged"
	terse_report=${PPG_EXEC_PATH}/unchanged.report
	for report in $( /bin/ls $reportstmpdir/*.yaml) ;
	do
	report_status=$(/bin/grep -P '\bstatus: (?!unchanged)\E' $report)
	#if [[ ! -z $report_status ]]; then
	if [[ -z $report_status ]]; then
	   report_time=$(echo time: $(date +"%Y-%m-%d %H:%M:%S.%6N %:z"))
	   report_host=$(/bin/grep host: $report | /bin/sed -e 's/^[ \t]*//')
	   /bin/cp $terse_report $report
	   /bin/sed -i "s,REPLACEMEDATESTAMP,${report_time},g" $report
	   /bin/sed -i "s,REPLACEMEHOSTNAME,${report_host},g" $report
	fi
	done 
	pushd /usr/share/puppet-dashboard >/dev/null
	rake RAILS_ENV=production reports:import REPORT_DIR=${reportstmpdir} | grep -v 'ETA:.*Importing:'
	popd >/dev/null
fi

# the rake/import process needs the file to stick around for a while
# and does not delete it when done, so this is fugly
find /var/tmp -type d -name 'ppg-reports-to-dashboard.*' -user puppet-dashboard -mmin +120 -print0 | \
     xargs -0 --no-run-if-empty -L 100 rm -fr 

